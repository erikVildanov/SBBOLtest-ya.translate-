//
//  TabBarViewController.swift
//  SBBOLtest
//
//  Created by Erik Vildanov on 30/05/2019.
//  Copyright (c) 2019 Erik Vildanov. All rights reserved.
//
//  This file was generated by the üêç VIPER generator
//

import UIKit

final class TabBarViewController: UITabBarController {

    // MARK: - Public properties -

    var presenter: TabBarPresenterInterface!
    private let translate = TranslateWireframe().viewController
    private let wordList = WordListWireframe().viewController
    private let settings = SettingsWireframe().viewController

    // MARK: - Lifecycle -

    override func viewDidLoad() {
        super.viewDidLoad()
        tabBar.isTranslucent = false
        self.delegate = self
        presenter.viewDidLoad()
    }
	
}

// MARK: - Extensions -

extension TabBarViewController: TabBarViewInterface {
    func setViewSontrollers() {
        translate.tabBarItem = UITabBarItem(title: nil, image: UIImage(named: "transtate"), tag: 0)
        wordList.tabBarItem = UITabBarItem(title: nil, image: UIImage(named: "list"), tag: 1)
        settings.tabBarItem = UITabBarItem(title: nil, image: UIImage(named: "settings"), tag: 2)
        viewControllers = [translate, wordList, settings]
    }
    
    @objc func removeAllHisory() {
        presenter.removeAllHistory()
        (wordList as? WordListViewController)?.reloadTableView()
    }
}

extension TabBarViewController: UITabBarControllerDelegate {
    func tabBarController(_ tabBarController: UITabBarController, didSelect viewController: UIViewController) {
        navigationItem.rightBarButtonItem = nil
        if viewController is TranslateViewController {
            title = "Translate"
        } else if viewController is WordListViewController {
            title = "History"
            navigationItem.rightBarButtonItem = UIBarButtonItem(title: "Remove All", style: .done, target: self, action: #selector(removeAllHisory))
        } else if viewController is SettingsViewController {
            title = "Settings"
        }
    }
}
